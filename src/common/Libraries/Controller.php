<?php

declare(strict_types=1);

namespace Common\Libraries;

use Lcobucci\JWT\Token;
use Psr\Http\Message\ServerRequestInterface;
use Spatial\Common\HttpAttributes\HttpPost;
use Spatial\Core\Attributes\Route;
use Spatial\Core\ControllerBase;
use Spatial\Core\HttpMethodAttribute;
use Spatial\Mediator\Mediator;
use Spatial\Router\ActivatedRoute;

/**
 * BaseController Class exists in the Api\Controllers namespace
 * A Controller represents the individual URIs client apps access to interact with data
 * URI:  https://api.com/values
 *
 * @category Controller
 */
class Controller extends ControllerBase
{
    public static ?Token $token = null;
    protected ActivatedRoute $params;
    protected array $appClaims = [];

    #[Route('__invoke')]
    public function __invoke(ServerRequestInterface $request)
    {
        parent::__invoke($request); // TODO: Change the autogenerated stu
        $this->params = new ActivatedRoute();
        $this->params->setParams($request->getQueryParams());

        $this->params->page ??= 1;
        $this->params->pageSize ??= 10;
        $this->params->searchValue ??= '%';


        $this->params->searchFields = $this->params->searchFields !== null ?
            explode(',', ($this->params->searchFields)) : null;


        $this->params->orderBy = $this->params->orderBy !== null ?
            explode(',', $this->params->orderBy) : null;

        $this->onInit();
    }

    /**
     * Search Key Algorithm
     *
     * @param string $search
     * @return void
     */
    private function _searchAlg(string $search): void
    {
        $this->searchValue = '%' . str_replace(' ', '%', $search) . '%';
        // echo $this->searchValue;
    }

    /**
     * OnInit()
     *
     * @return void
     */
    private function onInit(): void
    {
        if (self::$token === null) {
            return;
        }
        $claims = self::$token->claims();
        if ($claims) {
            $this->appClaims = $claims->get('appClaim') ?? [];
        }
    }
}
